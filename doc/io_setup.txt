  
# io_setup(2) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | RETURN VALUE | ERRORS | VERSIONS | CONFORMING
TO | NOTES | SEE ALSO | COLOPHON  
  
---  
  
|  
      
    
    IO_SETUP(2)             Linux Programmer's Manual            IO_SETUP(2)
    
## NAME         top
    
    
           io_setup - create an asynchronous I/O context
    
## SYNOPSIS         top
    
    
           #include <linux/aio_abi.h>          / Defines needed types /
    
           long io_setup(unsigned int _nr_events_ , aio_context_t  _ctx_idp_ );
    
           _Note_ : There is no glibc wrapper for this system call; see NOTES.
    
## DESCRIPTION         top
    
    
           _Note_ : this page describes the raw Linux system call interface.
           The wrapper function provided by _libaio_ uses a different type for
           the _ctx_idp_ argument.  See NOTES.
    
           The io_setup () system call creates an asynchronous I/O context
           suitable for concurrently processing _nr_events_ operations.  The
           _ctx_idp_ argument must not point to an AIO context that already
           exists, and must be initialized to 0 prior to the call.  On
           successful creation of the AIO context, _ctx_idp_ is filled in
           with the resulting handle.
    
## RETURN VALUE         top
    
    
           On success, io_setup () returns 0.  For the failure return, see
           NOTES.
    
## ERRORS         top
    
    
           EAGAIN The specified _nr_events_ exceeds the limit of available
                  events, as defined in _/proc/sys/fs/aio-max-nr_ (see
                  proc(5)).
    
           EFAULT An invalid pointer is passed for _ctx_idp_.
    
           EINVAL _ctx_idp_ is not initialized, or the specified _nr_events_
                  exceeds internal limits.  _nr_events_ should be greater than
                  0.
    
           ENOMEM Insufficient kernel resources are available.
    
           ENOSYS io_setup () is not implemented on this architecture.
    
## VERSIONS         top
    
    
           The asynchronous I/O system calls first appeared in Linux 2.5.
    
## CONFORMING TO         top
    
    
           io_setup () is Linux-specific and should not be used in programs
           that are intended to be portable.
    
## NOTES         top
    
    
           Glibc does not provide a wrapper for this system call.  You could
           invoke it using syscall(2).  But instead, you probably want to
           use the io_setup () wrapper function provided by _libaio_.
    
           Note that the _libaio_ wrapper function uses a different type
           ( _io_context_t _ ) for the _ctx_idp_ argument.  Note also that the
           _libaio_ wrapper does not follow the usual C library conventions
           for indicating errors: on error it returns a negated error number
           (the negative of one of the values listed in ERRORS).  If the
           system call is invoked via syscall(2), then the return value
           follows the usual conventions for indicating an error: -1, with
           _errno_ set to a (positive) value that indicates the error.
    
## SEE ALSO         top
    
    
           io_cancel(2), io_destroy(2), io_getevents(2), io_submit(2),
           aio(7)
    
## COLOPHON         top
    
    
           This page is part of release 5.11 of the Linux _man-pages_ project.
           A description of the project, information about reporting bugs,
           and the latest version of this page, can be found at
           https://www.kernel.org/doc/man-pages/.
    
    Linux                          2021-03-22                    IO_SETUP(2)
    
