  
# ualarm(3) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | RETURN VALUE | ERRORS | ATTRIBUTES |
CONFORMING TO | NOTES | SEE ALSO | COLOPHON  
  
---  
  
|  
      
    
    UALARM(3)               Linux Programmer's Manual              UALARM(3)
    
## NAME         top
    
    
           ualarm - schedule signal after given number of microseconds
    
## SYNOPSIS         top
    
    
           #include <unistd.h>
    
           useconds_t ualarm(useconds_t _usecs_ , useconds_t _interval_ );
    
       Feature Test Macro Requirements for glibc (see
       feature_test_macros(7)):
    
           ualarm ():
               Since glibc 2.12:
                   (_XOPEN_SOURCE >= 500) && ! (_POSIX_C_SOURCE >= 200809L)
                       || / Glibc since 2.19: / _DEFAULT_SOURCE
                       || / Glibc <= 2.19: / _BSD_SOURCE
               Before glibc 2.12:
                   _BSD_SOURCE || _XOPEN_SOURCE >= 500
    
## DESCRIPTION         top
    
    
           The ualarm () function causes the signal SIGALRM to be sent to the
           invoking process after (not less than) _usecs_ microseconds.  The
           delay may be lengthened slightly by any system activity or by the
           time spent processing the call or by the granularity of system
           timers.
    
           Unless caught or ignored, the SIGALRM signal will terminate the
           process.
    
           If the _interval_ argument is nonzero, further SIGALRM signals will
           be sent every _interval_ microseconds after the first.
    
## RETURN VALUE         top
    
    
           This function returns the number of microseconds remaining for
           any alarm that was previously set, or 0 if no alarm was pending.
    
## ERRORS         top
    
    
           EINTR Interrupted by a signal; see signal(7).
    
           EINVAL _usecs_ or _interval_ is not smaller than 1000000.  (On
                  systems where that is considered an error.)
    
## ATTRIBUTES         top
    
    
           For an explanation of the terms used in this section, see
           attributes(7).
    
           ┌──────────────────────────────────────┬───────────────┬─────────┐
           │ Interface │ Attribute │ Value │
           ├──────────────────────────────────────┼───────────────┼─────────┤
           │ ualarm ()                              │ Thread safety │ MT-Safe │
           └──────────────────────────────────────┴───────────────┴─────────┘
    
## CONFORMING TO         top
    
    
           4.3BSD, POSIX.1-2001.  POSIX.1-2001 marks ualarm () as obsolete.
           POSIX.1-2008 removes the specification of ualarm ().  4.3BSD,
           SUSv2, and POSIX do not define any errors.
    
## NOTES         top
    
    
           POSIX.1-2001 does not specify what happens if the _usecs_ argument
           is 0.  On Linux (and probably most other systems), the effect is
           to cancel any pending alarm.
    
           The type _useconds_t_ is an unsigned integer type capable of
           holding integers in the range [0,1000000].  On the original BSD
           implementation, and in glibc before version 2.1, the arguments to
           ualarm () were instead typed as _unsigned int_.  Programs will be
           more portable if they never mention _useconds_t_ explicitly.
    
           The interaction of this function with other timer functions such
           as alarm(2), sleep(3), nanosleep(2), setitimer(2),
           timer_create(2), timer_delete(2), timer_getoverrun(2),
           timer_gettime(2), timer_settime(2), usleep(3) is unspecified.
    
           This function is obsolete.  Use setitimer(2) or POSIX interval
           timers (timer_create(2), etc.)  instead.
    
## SEE ALSO         top
    
    
           alarm(2), getitimer(2), nanosleep(2), select(2), setitimer(2),
           usleep(3), time(7)
    
## COLOPHON         top
    
    
           This page is part of release 5.11 of the Linux _man-pages_ project.
           A description of the project, information about reporting bugs,
           and the latest version of this page, can be found at
           https://www.kernel.org/doc/man-pages/.
    
                                   2021-03-22                      UALARM(3)
    
