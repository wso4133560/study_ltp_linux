  
# assert_perror(3) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | RETURN VALUE | ATTRIBUTES | CONFORMING TO |
BUGS | SEE ALSO | COLOPHON  
  
---  
  
|  
      
    
    ASSERT_PERROR(3)        Linux Programmer's Manual       ASSERT_PERROR(3)
    
## NAME         top
    
    
           assert_perror - test errnum and abort
    
## SYNOPSIS         top
    
    
           #define _GNU_SOURCE / See feature_test_macros(7) /
           #include <assert.h>
    
           void assert_perror(int _errnum_ );
    
## DESCRIPTION         top
    
    
           If the macro NDEBUG was defined at the moment _< assert.h>_ was last
           included, the macro assert_perror () generates no code, and hence
           does nothing at all.  Otherwise, the macro assert_perror () prints
           an error message to standard error and terminates the program by
           calling abort(3) if _errnum_ is nonzero.  The message contains the
           filename, function name and line number of the macro call, and
           the output of _strerror(errnum)_.
    
## RETURN VALUE         top
    
    
           No value is returned.
    
## ATTRIBUTES         top
    
    
           For an explanation of the terms used in this section, see
           attributes(7).
    
           ┌──────────────────────────────────────┬───────────────┬─────────┐
           │ Interface │ Attribute │ Value │
           ├──────────────────────────────────────┼───────────────┼─────────┤
           │ assert_perror ()                       │ Thread safety │ MT-Safe │
           └──────────────────────────────────────┴───────────────┴─────────┘
    
## CONFORMING TO         top
    
    
           This is a GNU extension.
    
## BUGS         top
    
    
           The purpose of the assert macros is to help programmers find bugs
           in their programs, things that cannot happen unless there was a
           coding mistake.  However, with system or library calls the
           situation is rather different, and error returns can happen, and
           will happen, and should be tested for.  Not by an assert, where
           the test goes away when NDEBUG is defined, but by proper error
           handling code.  Never use this macro.
    
## SEE ALSO         top
    
    
           abort(3), assert(3), exit(3), strerror(3)
    
## COLOPHON         top
    
    
           This page is part of release 5.11 of the Linux _man-pages_ project.
           A description of the project, information about reporting bugs,
           and the latest version of this page, can be found at
           https://www.kernel.org/doc/man-pages/.
    
    GNU                            2021-03-22               ASSERT_PERROR(3)
    
