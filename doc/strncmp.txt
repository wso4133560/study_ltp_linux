  
# strcmp(3) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | RETURN VALUE | ATTRIBUTES | CONFORMING TO |
NOTES | EXAMPLES | SEE ALSO | COLOPHON  
  
---  
  
|  
      
    
    STRCMP(3)               Linux Programmer's Manual              STRCMP(3)
    
## NAME         top
    
    
           strcmp, strncmp - compare two strings
    
## SYNOPSIS         top
    
    
           #include <string.h>
    
           int strcmp(const char  _s1_ , const char  _s2_ );
           int strncmp(const char  _s1_ , const char  _s2_ , size_t _n_ );
    
## DESCRIPTION         top
    
    
           The strcmp () function compares the two strings _s1_ and _s2_.  The
           locale is not taken into account (for a locale-aware comparison,
           see strcoll(3)).  The comparison is done using unsigned
           characters.
    
           strcmp () returns an integer indicating the result of the
           comparison, as follows:
    
           • 0, if the _s1_ and _s2_ are equal;
    
           • a negative value if _s1_ is less than _s2_ ;
    
           • a positive value if _s1_ is greater than _s2_.
    
           The strncmp () function is similar, except it compares only the
           first (at most) _n_ bytes of _s1_ and _s2_.
    
## RETURN VALUE         top
    
    
           The strcmp () and strncmp () functions return an integer less than,
           equal to, or greater than zero if _s1_ (or the first _n_ bytes
           thereof) is found, respectively, to be less than, to match, or be
           greater than _s2_.
    
## ATTRIBUTES         top
    
    
           For an explanation of the terms used in this section, see
           attributes(7).
    
           ┌──────────────────────────────────────┬───────────────┬─────────┐
           │ Interface │ Attribute │ Value │
           ├──────────────────────────────────────┼───────────────┼─────────┤
           │ strcmp (), strncmp ()                   │ Thread safety │ MT-Safe │
           └──────────────────────────────────────┴───────────────┴─────────┘
    
## CONFORMING TO         top
    
    
           POSIX.1-2001, POSIX.1-2008, C89, C99, SVr4, 4.3BSD.
    
## NOTES         top
    
    
           POSIX.1 specifies only that:
    
                  The sign of a nonzero return value shall be determined by
                  the sign of the difference between the values of the first
                  pair of bytes (both interpreted as type _unsigned char_ )
                  that differ in the strings being compared.
    
           In glibc, as in most other implementations, the return value is
           the arithmetic result of subtracting the last compared byte in _s2_
           from the last compared byte in _s1_.  (If the two characters are
           equal, this difference is 0.)
    
## EXAMPLES         top
    
    
           The program below can be used to demonstrate the operation of
           strcmp () (when given two arguments) and strncmp () (when given
           three arguments).  First, some examples using strcmp ():
    
               $ ./string_comp ABC ABC
               <str1> and <str2> are equal
               $ ./string_comp ABC AB # 'C' is ASCII 67; 'C' - ' ' = 67
               <str1> is greater than <str2> (67)
               $ ./string_comp ABA ABZ # 'A' is ASCII 65; 'Z' is ASCII 90
               <str1> is less than <str2> (-25)
               $ ./string_comp ABJ ABC
               <str1> is greater than <str2> (7)
               $ . /string_comp $'\201' A # 0201 - 0101 = 0100 (or 64 decimal)
               <str1> is greater than <str2> (64)
    
           The last example uses bash(1)-specific syntax to produce a string
           containing an 8-bit ASCII code; the result demonstrates that the
           string comparison uses unsigned characters.
    
           And then some examples using strncmp ():
    
               $ ./string_comp ABC AB 3
               <str1> is greater than <str2> (67)
               $ ./string_comp ABC AB 2
               <str1> and <str2> are equal in the first 2 bytes
    
       Program source
    
           / string_comp.c
    
              Licensed under GNU General Public License v2 or later.
           /
           #include <stdio.h>
           #include <stdlib.h>
           #include <string.h>
    
           int
           main(int argc, char argv[])
           {
               int res;
    
               if (argc < 3) {
                   fprintf(stderr, "Usage: %s <str1> <str2> [<len>]\n", argv[0]);
                   exit(EXIT_FAILURE);
               }
    
               if (argc == 3)
                   res = strcmp(argv[1], argv[2]);
               else
                   res = strncmp(argv[1], argv[2], atoi(argv[3]));
    
               if (res == 0) {
                   printf("<str1> and <str2> are equal");
                   if (argc > 3)
                       printf(" in the first %d bytes\n", atoi(argv[3]));
                   printf("\n");
               } else if (res < 0) {
                   printf("<str1> is less than <str2> (%d)\n", res);
               } else {
                   printf("<str1> is greater than <str2> (%d)\n", res);
               }
    
               exit(EXIT_SUCCESS);
           }
    
## SEE ALSO         top
    
    
           bcmp(3), memcmp(3), strcasecmp(3), strcoll(3), string(3),
           strncasecmp(3), strverscmp(3), wcscmp(3), wcsncmp(3), ascii(7)
    
## COLOPHON         top
    
    
           This page is part of release 5.11 of the Linux _man-pages_ project.
           A description of the project, information about reporting bugs,
           and the latest version of this page, can be found at
           https://www.kernel.org/doc/man-pages/.
    
                                   2021-03-22                      STRCMP(3)
    
