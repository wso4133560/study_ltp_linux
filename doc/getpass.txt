  
# getpass(3) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | RETURN VALUE | ERRORS | FILES | ATTRIBUTES |
CONFORMING TO | NOTES | BUGS | SEE ALSO | COLOPHON  
  
---  
  
|  
      
    
    GETPASS(3)              Linux Programmer's Manual             GETPASS(3)
    
## NAME         top
    
    
           getpass - get a password
    
## SYNOPSIS         top
    
    
           #include <unistd.h>
    
           char getpass(const char  _prompt_ );
    
       Feature Test Macro Requirements for glibc (see
       feature_test_macros(7)):
    
           getpass ():
               Since glibc 2.2.2:
                   _XOPEN_SOURCE && ! (_POSIX_C_SOURCE >= 200112L)
                       || / Glibc since 2.19: / _DEFAULT_SOURCE
                       || / Glibc <= 2.19: / _BSD_SOURCE
               Before glibc 2.2.2:
                   none
    
## DESCRIPTION         top
    
    
           This function is obsolete.  Do not use it.  If you want to read
           input without terminal echoing enabled, see the description of
           the _ECHO_ flag in termios(3).
    
           The getpass () function opens _/dev/tty_ (the controlling terminal
           of the process), outputs the string _prompt_ , turns off echoing,
           reads one line (the "password"), restores the terminal state and
           closes _/dev/tty_ again.
    
## RETURN VALUE         top
    
    
           The function getpass () returns a pointer to a static buffer
           containing (the first PASS_MAX bytes of) the password without the
           trailing newline, terminated by a null byte ('\0').  This buffer
           may be overwritten by a following call.  On error, the terminal
           state is restored, _errno_ is set to indicate the error, and NULL
           is returned.
    
## ERRORS         top
    
    
           The function may fail if
    
           ENXIO The process does not have a controlling terminal.
    
## FILES         top
    
    
           _/dev/tty_
    
## ATTRIBUTES         top
    
    
           For an explanation of the terms used in this section, see
           attributes(7).
    
           ┌───────────────────────────────┬───────────────┬────────────────┐
           │ Interface │ Attribute │ Value │
           ├───────────────────────────────┼───────────────┼────────────────┤
           │ getpass ()                      │ Thread safety │ MT-Unsafe term │
           └───────────────────────────────┴───────────────┴────────────────┘
    
## CONFORMING TO         top
    
    
           Present in SUSv2, but marked LEGACY.  Removed in POSIX.1-2001.
    
## NOTES         top
    
    
           In the GNU C library implementation, if _/dev/tty_ cannot be
           opened, the prompt is written to _stderr_ and the password is read
           from _stdin_.  There is no limit on the length of the password.
           Line editing is not disabled.
    
           According to SUSv2, the value of PASS_MAX must be defined in
           _< limits.h>_ in case it is smaller than 8, and can in any case be
           obtained using _sysconf(_SC_PASS_MAX)_.  However, POSIX.2 withdraws
           the constants PASS_MAX and _SC_PASS_MAX , and the function
           getpass ().  The glibc version accepts _SC_PASS_MAX and returns
           BUFSIZ (e.g., 8192).
    
## BUGS         top
    
    
           The calling process should zero the password as soon as possible
           to avoid leaving the cleartext password visible in the process's
           address space.
    
## SEE ALSO         top
    
    
           crypt(3)
    
## COLOPHON         top
    
    
           This page is part of release 5.11 of the Linux _man-pages_ project.
           A description of the project, information about reporting bugs,
           and the latest version of this page, can be found at
           https://www.kernel.org/doc/man-pages/.
    
    Linux                          2021-03-22                     GETPASS(3)
    
