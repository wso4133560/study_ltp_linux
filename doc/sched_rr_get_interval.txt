  
# sched_rr_get_interval(2) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | RETURN VALUE | ERRORS | CONFORMING TO | NOTES
| SEE ALSO | COLOPHON  
  
---  
  
|  
      
    
    SCHED_RR_GET_INTERVAL(2)Linux Programmer's ManualCHED_RR_GET_INTERVAL(2)
    
## NAME         top
    
    
           sched_rr_get_interval - get the SCHED_RR interval for the named
           process
    
## SYNOPSIS         top
    
    
           #include <sched.h>
    
           int sched_rr_get_interval(pid_t _pid_ , struct timespec  _tp_ );
    
## DESCRIPTION         top
    
    
           sched_rr_get_interval () writes into the _timespec_ structure
           pointed to by _tp_ the round-robin time quantum for the process
           identified by _pid_.  The specified process should be running under
           the SCHED_RR scheduling policy.
    
           The _timespec_ structure has the following form:
    
               struct timespec {
                   time_t tv_sec;    / seconds /
                   long   tv_nsec;   / nanoseconds /
               };
    
           If _pid_ is zero, the time quantum for the calling process is
           written into _tp_.
    
## RETURN VALUE         top
    
    
           On success, sched_rr_get_interval () returns 0.  On error, -1 is
           returned, and _errno_ is set to indicate the error.
    
## ERRORS         top
    
    
           EFAULT Problem with copying information to user space.
    
           EINVAL Invalid pid.
    
           ENOSYS The system call is not yet implemented (only on rather old
                  kernels).
    
           ESRCH Could not find a process with the ID _pid_.
    
## CONFORMING TO         top
    
    
           POSIX.1-2001, POSIX.1-2008.
    
## NOTES         top
    
    
           POSIX systems on which sched_rr_get_interval () is available
           define _POSIX_PRIORITY_SCHEDULING in _< unistd.h>_.
    
       Linux notes
           POSIX does not specify any mechanism for controlling the size of
           the round-robin time quantum.  Older Linux kernels provide a
           (nonportable) method of doing this.  The quantum can be
           controlled by adjusting the process's nice value (see
           setpriority(2)).  Assigning a negative (i.e., high) nice value
           results in a longer quantum; assigning a positive (i.e., low)
           nice value results in a shorter quantum.  The default quantum is
           0.1 seconds; the degree to which changing the nice value affects
           the quantum has varied somewhat across kernel versions.  This
           method of adjusting the quantum was removed starting with Linux
           2.6.24.
    
           Linux 3.9 added a new mechanism for adjusting (and viewing) the
           SCHED_RR quantum: the _/proc/sys/kernel/sched_rr_timeslice_ms_ file
           exposes the quantum as a millisecond value, whose default is 100.
           Writing 0 to this file resets the quantum to the default value.
    
## SEE ALSO         top
    
    
           sched(7)
    
## COLOPHON         top
    
    
           This page is part of release 5.11 of the Linux _man-pages_ project.
           A description of the project, information about reporting bugs,
           and the latest version of this page, can be found at
           https://www.kernel.org/doc/man-pages/.
    
    Linux                          2021-03-22       SCHED_RR_GET_INTERVAL(2)
    
