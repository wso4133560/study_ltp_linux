  
# string(3) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | SEE ALSO | COLOPHON  
  
---  
  
|  
      
    
    STRING(3)               Linux Programmer's Manual              STRING(3)
    
## NAME         top
    
    
           stpcpy, strcasecmp, strcat, strchr, strcmp, strcoll, strcpy,
           strcspn, strdup, strfry, strlen, strncat, strncmp, strncpy,
           strncasecmp, strpbrk, strrchr, strsep, strspn, strstr, strtok,
           strxfrm, index, rindex - string operations
    
## SYNOPSIS         top
    
    
           #include <strings.h>
    
           int strcasecmp(const char  _s1_ , const char  _s2_ );
                  Compare the strings _s1_ and _s2_ ignoring case.
    
           int strncasecmp(const char  _s1_ , const char  _s2_ , size_t _n_ );
                  Compare the first _n_ bytes of the strings _s1_ and _s2_
                  ignoring case.
    
           char index(const char  _s_ , int _c_ );
                  Return a pointer to the first occurrence of the character
                  _c_ in the string _s_.
    
           char rindex(const char  _s_ , int _c_ );
                  Return a pointer to the last occurrence of the character _c_
                  in the string _s_.
    
           #include <string.h>
    
           char stpcpy(char restrict _dest_ , const char restrict _src_ );
                  Copy a string from _src_ to _dest_ , returning a pointer to the
                  end of the resulting string at _dest_.
    
           char strcat(char restrict _dest_ , const char restrict _src_ );
                  Append the string _src_ to the string _dest_ , returning a
                  pointer _dest_.
    
           char strchr(const char  _s_ , int _c_ );
                  Return a pointer to the first occurrence of the character
                  _c_ in the string _s_.
    
           int strcmp(const char  _s1_ , const char  _s2_ );
                  Compare the strings _s1_ with _s2_.
    
           int strcoll(const char  _s1_ , const char  _s2_ );
                  Compare the strings _s1_ with _s2_ using the current locale.
    
           char strcpy(char restrict _dest_ , const char restrict _src_ );
                  Copy the string _src_ to _dest_ , returning a pointer to the
                  start of _dest_.
    
           size_t strcspn(const char  _s_ , const char  _reject_ );
                  Calculate the length of the initial segment of the string
                  _s_ which does not contain any of bytes in the string
                  _reject_ ,
    
           char strdup(const char  _s_ );
                  Return a duplicate of the string _s_ in memory allocated
                  using malloc(3).
    
           char strfry(char  _string_ );
                  Randomly swap the characters in _string_.
    
           size_t strlen(const char  _s_ );
                  Return the length of the string _s_.
    
           char strncat(char restrict _dest_ , const char restrict _src_ ,
           size_t _n_ );
                  Append at most _n_ bytes from the string _src_ to the string
                  _dest_ , returning a pointer to _dest_.
    
           int strncmp(const char  _s1_ , const char  _s2_ , size_t _n_ );
                  Compare at most _n_ bytes of the strings _s1_ and _s2_.
    
           char strncpy(char restrict _dest_ , const char restrict _src_ ,
           size_t _n_ );
                  Copy at most _n_ bytes from string _src_ to _dest_ , returning a
                  pointer to the start of _dest_.
    
           char strpbrk(const char  _s_ , const char  _accept_ );
                  Return a pointer to the first occurrence in the string _s_
                  of one of the bytes in the string _accept_.
    
           char strrchr(const char  _s_ , int _c_ );
                  Return a pointer to the last occurrence of the character _c_
                  in the string _s_.
    
           char strsep(char restrict _stringp_ , const char restrict
           _delim_ );
                  Extract the initial token in _stringp_ that is delimited by
                  one of the bytes in _delim_.
    
           size_t strspn(const char  _s_ , const char  _accept_ );
                  Calculate the length of the starting segment in the string
                  _s_ that consists entirely of bytes in _accept_.
    
           char strstr(const char  _haystack_ , const char  _needle_ );
                  Find the first occurrence of the substring _needle_ in the
                  string _haystack_ , returning a pointer to the found
                  substring.
    
           char strtok(char restrict _s_ , const char restrict _delim_ );
                  Extract tokens from the string _s_ that are delimited by one
                  of the bytes in _delim_.
    
           size_t strxfrm(char restrict _dst_ , const char restrict _src_ ,
           size_t _n_ );
                  Transforms _src_ to the current locale and copies the first
                  _n_ bytes to _dst_.
    
## DESCRIPTION         top
    
    
           The string functions perform operations on null-terminated
           strings.  See the individual man pages for descriptions of each
           function.
    
## SEE ALSO         top
    
    
           bstring(3), index(3), rindex(3), stpcpy(3), strcasecmp(3),
           strcat(3), strchr(3), strcmp(3), strcoll(3), strcpy(3),
           strcspn(3), strdup(3), strfry(3), strlen(3), strncasecmp(3),
           strncat(3), strncmp(3), strncpy(3), strpbrk(3), strrchr(3),
           strsep(3), strspn(3), strstr(3), strtok(3), strxfrm(3)
    
## COLOPHON         top
    
    
           This page is part of release 5.11 of the Linux _man-pages_ project.
           A description of the project, information about reporting bugs,
           and the latest version of this page, can be found at
           https://www.kernel.org/doc/man-pages/.
    
                                   2021-03-22                      STRING(3)
    
