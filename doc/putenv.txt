  
# putenv(3) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | RETURN VALUE | ERRORS | ATTRIBUTES |
CONFORMING TO | NOTES | SEE ALSO | COLOPHON  
  
---  
  
|  
      
    
    PUTENV(3)               Linux Programmer's Manual              PUTENV(3)
    
## NAME         top
    
    
           putenv - change or add an environment variable
    
## SYNOPSIS         top
    
    
           #include <stdlib.h>
    
           int putenv(char  _string_ );
    
       Feature Test Macro Requirements for glibc (see
       feature_test_macros(7)):
    
           putenv ():
               _XOPEN_SOURCE
                   || / Glibc since 2.19: / _DEFAULT_SOURCE
                   || / Glibc <= 2.19: / _SVID_SOURCE
    
## DESCRIPTION         top
    
    
           The putenv () function adds or changes the value of environment
           variables.  The argument _string_ is of the form _name_ = _value_.  If
           _name_ does not already exist in the environment, then _string_ is
           added to the environment.  If _name_ does exist, then the value of
           _name_ in the environment is changed to _value_.  The string pointed
           to by _string_ becomes part of the environment, so altering the
           string changes the environment.
    
## RETURN VALUE         top
    
    
           The putenv () function returns zero on success.  On failure, it
           returns a nonzero value, and _errno_ is set to indicate the error.
    
## ERRORS         top
    
    
           ENOMEM Insufficient space to allocate new environment.
    
## ATTRIBUTES         top
    
    
           For an explanation of the terms used in this section, see
           attributes(7).
    
           ┌──────────────────────────┬───────────────┬─────────────────────┐
           │ Interface │ Attribute │ Value │
           ├──────────────────────────┼───────────────┼─────────────────────┤
           │ putenv ()                  │ Thread safety │ MT-Unsafe const:env │
           └──────────────────────────┴───────────────┴─────────────────────┘
    
## CONFORMING TO         top
    
    
           POSIX.1-2001, POSIX.1-2008, SVr4, 4.3BSD.
    
## NOTES         top
    
    
           The putenv () function is not required to be reentrant, and the
           one in glibc 2.0 is not, but the glibc 2.1 version is.
    
           Since version 2.1.2, the glibc implementation conforms to SUSv2:
           the pointer _string_ given to putenv () is used.  In particular,
           this string becomes part of the environment; changing it later
           will change the environment.  (Thus, it is an error to call
           putenv () with an automatic variable as the argument, then return
           from the calling function while _string_ is still part of the
           environment.)  However, glibc versions 2.0 to 2.1.1 differ: a
           copy of the string is used.  On the one hand this causes a memory
           leak, and on the other hand it violates SUSv2.
    
           The 4.4BSD version, like glibc 2.0, uses a copy.
    
           SUSv2 removes the _const_ from the prototype, and so does glibc
           2.1.3.
    
           The GNU C library implementation provides a nonstandard
           extension.  If _string_ does not include an equal sign:
    
               putenv("NAME");
    
           then the named variable is removed from the caller's environment.
    
## SEE ALSO         top
    
    
           clearenv(3), getenv(3), setenv(3), unsetenv(3), environ(7)
    
## COLOPHON         top
    
    
           This page is part of release 5.11 of the Linux _man-pages_ project.
           A description of the project, information about reporting bugs,
           and the latest version of this page, can be found at
           https://www.kernel.org/doc/man-pages/.
    
    GNU                            2021-03-22                      PUTENV(3)
    
