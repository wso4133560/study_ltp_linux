  
# asprintf(3) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | RETURN VALUE | ATTRIBUTES | CONFORMING TO |
SEE ALSO | COLOPHON  
  
---  
  
|  
      
    
    ASPRINTF(3)             Linux Programmer's Manual            ASPRINTF(3)
    
## NAME         top
    
    
           asprintf, vasprintf - print to allocated string
    
## SYNOPSIS         top
    
    
           #define _GNU_SOURCE / See feature_test_macros(7) /
           #include <stdio.h>
    
           int asprintf(char restrict _strp_ , const char restrict _fmt_ , ...);
           int vasprintf(char restrict _strp_ , const char restrict _fmt_ ,
                         va_list _ap_ );
    
## DESCRIPTION         top
    
    
           The functions asprintf () and vasprintf () are analogs of
           sprintf(3) and vsprintf(3), except that they allocate a string
           large enough to hold the output including the terminating null
           byte ('\0'), and return a pointer to it via the first argument.
           This pointer should be passed to free(3) to release the allocated
           storage when it is no longer needed.
    
## RETURN VALUE         top
    
    
           When successful, these functions return the number of bytes
           printed, just like sprintf(3).  If memory allocation wasn't
           possible, or some other error occurs, these functions will return
           -1, and the contents of _strp_ are undefined.
    
## ATTRIBUTES         top
    
    
           For an explanation of the terms used in this section, see
           attributes(7).
    
           ┌───────────────────────────────┬───────────────┬────────────────┐
           │ Interface │ Attribute │ Value │
           ├───────────────────────────────┼───────────────┼────────────────┤
           │ asprintf (), vasprintf ()        │ Thread safety │ MT-Safe locale │
           └───────────────────────────────┴───────────────┴────────────────┘
    
## CONFORMING TO         top
    
    
           These functions are GNU extensions, not in C or POSIX.  They are
           also available under BSD.  The FreeBSD implementation sets _strp_
           to NULL on error.
    
## SEE ALSO         top
    
    
           free(3), malloc(3), printf(3)
    
## COLOPHON         top
    
    
           This page is part of release 5.11 of the Linux _man-pages_ project.
           A description of the project, information about reporting bugs,
           and the latest version of this page, can be found at
           https://www.kernel.org/doc/man-pages/.
    
    GNU                            2021-03-22                    ASPRINTF(3)
    
