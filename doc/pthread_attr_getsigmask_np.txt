  
# pthread_attr_setsigmask_np(3) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | RETURN VALUE | ERRORS | VERSIONS | ATTRIBUTES
| CONFORMING TO | NOTES | SEE ALSO | COLOPHON  
  
---  
  
|  
      
    
    PTHREAD_ATTR_SETSIGMASK_NP(3) Programmer's ManualD_ATTR_SETSIGMASK_NP(3)
    
## NAME         top
    
    
           pthread_attr_setsigmask_np, pthread_attr_getsigmask_np - set/get
           signal mask attribute in thread attributes object
    
## SYNOPSIS         top
    
    
           #define _GNU_SOURCE / See feature_test_macros(7) /
           #include <pthread.h>
    
           int pthread_attr_setsigmask_np(pthread_attr_t  _attr_ ,
                                          const sigset_t  _sigmask_ );
           int pthread_attr_getsigmask_np(const pthread_attr_t  _attr_ ,
                                          sigset_t  _sigmask_ );
    
           Compile and link with _-pthread_.
    
## DESCRIPTION         top
    
    
           The pthread_attr_setsigmask_np () function sets the signal mask
           attribute of the thread attributes object referred to by _attr_ to
           the value specified in _sigmask_.  If _sigmask_ is specified as
           NULL, then any existing signal mask attribute in _attr_ is unset.
    
           The pthread_attr_getsigmask_np () function returns the signal mask
           attribute of the thread attributes object referred to by _attr_ in
           the buffer pointed to by _sigmask_.  If the signal mask attribute
           is currently unset, then this function returns the special value
           PTHREAD_ATTR_NO_SIGMASK_NP as its result.
    
## RETURN VALUE         top
    
    
           The pthread_attr_setsigmask_np () function returns 0 on success,
           or a nonzero error number on failure.
    
           the pthread_attr_getsigmask_np () function returns either 0 or
           PTHREAD_ATTR_NO_SIGMASK_NP.  When 0 is returned, the signal mask
           attribute is returned via _sigmask_.  A return value of
           PTHREAD_ATTR_NO_SIGMASK_NP indicates that the signal mask
           attribute is not set in _attr_.
    
           On error, these functions return a positive error number.
    
## ERRORS         top
    
    
           ENOMEM ( pthread_attr_setsigmask_np ()) Could not allocate memory.
    
## VERSIONS         top
    
    
           These functions are provided by glibc since version 2.32.
    
## ATTRIBUTES         top
    
    
           For an explanation of the terms used in this section, see
           attributes(7).
    
           ┌──────────────────────────────────────┬───────────────┬─────────┐
           │ Interface │ Attribute │ Value │
           ├──────────────────────────────────────┼───────────────┼─────────┤
           │ pthread_attr_setsigmask_np (),         │ Thread safety │ MT-Safe │
           │ pthread_attr_getsigmask_np ()          │               │         │
           └──────────────────────────────────────┴───────────────┴─────────┘
    
## CONFORMING TO         top
    
    
           These functions are nonstandard GNU extensions; hence the suffix
           "_np" (nonportable) in the names.
    
## NOTES         top
    
    
           The signal mask attribute determines the signal mask that will be
           assigned to a thread created using the thread attributes object
           _attr_.  If this attribute is not set, then a thread created using
           _attr_ will inherit a copy of the creating thread's signal mask.
    
           For more details on signal masks, see sigprocmask(2).  For a
           description of a set of macros that can be used to manipulate and
           inspect signal sets, see sigsetops(3).
    
           In the absence of pthread_attr_setsigmask_np () it is possible to
           create a thread with a desired signal mask as follows:
    
           • The creating thread uses pthread_sigmask(3) to save its current
             signal mask and set its mask to block all signals.
    
           • The new thread is then created using pthread_create (); the new
             thread will inherit the creating thread's signal mask.
    
           • The new thread sets its signal mask to the desired value using
             pthread_sigmask(3).
    
           • The creating thread restores its signal mask to the original
             value.
    
           Following the above steps, there is no possibility for the new
           thread to receive a signal before it has adjusted its signal mask
           to the desired value.
    
## SEE ALSO         top
    
    
           sigprocmask(2), pthread_attr_init(3), pthread_sigmask(3),
           pthreads(7), signal(7)
    
## COLOPHON         top
    
    
           This page is part of release 5.11 of the Linux _man-pages_ project.
           A description of the project, information about reporting bugs,
           and the latest version of this page, can be found at
           https://www.kernel.org/doc/man-pages/.
    
    Linux                          2021-03-22  PTHREAD_ATTR_SETSIGMASK_NP(3)
    
