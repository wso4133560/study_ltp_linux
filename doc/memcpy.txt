  
# memcpy(3) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | RETURN VALUE | ATTRIBUTES | CONFORMING TO |
NOTES | SEE ALSO | COLOPHON  
  
---  
  
|  
      
    
    MEMCPY(3)               Linux Programmer's Manual              MEMCPY(3)
    
## NAME         top
    
    
           memcpy - copy memory area
    
## SYNOPSIS         top
    
    
           #include <string.h>
    
           void memcpy(void restrict _dest_ , const void restrict _src_ , size_t _n_ );
    
## DESCRIPTION         top
    
    
           The memcpy () function copies _n_ bytes from memory area _src_ to
           memory area _dest_.  The memory areas must not overlap.  Use
           memmove(3) if the memory areas do overlap.
    
## RETURN VALUE         top
    
    
           The memcpy () function returns a pointer to _dest_.
    
## ATTRIBUTES         top
    
    
           For an explanation of the terms used in this section, see
           attributes(7).
    
           ┌──────────────────────────────────────┬───────────────┬─────────┐
           │ Interface │ Attribute │ Value │
           ├──────────────────────────────────────┼───────────────┼─────────┤
           │ memcpy ()                              │ Thread safety │ MT-Safe │
           └──────────────────────────────────────┴───────────────┴─────────┘
    
## CONFORMING TO         top
    
    
           POSIX.1-2001, POSIX.1-2008, C89, C99, SVr4, 4.3BSD.
    
## NOTES         top
    
    
           Failure to observe the requirement that the memory areas do not
           overlap has been the source of significant bugs.  (POSIX and the
           C standards are explicit that employing memcpy () with overlapping
           areas produces undefined behavior.)  Most notably, in glibc 2.13
           a performance optimization of memcpy () on some platforms
           (including x86-64) included changing the order in which bytes
           were copied from _src_ to _dest_.
    
           This change revealed breakages in a number of applications that
           performed copying with overlapping areas.  Under the previous
           implementation, the order in which the bytes were copied had
           fortuitously hidden the bug, which was revealed when the copying
           order was reversed.  In glibc 2.14, a versioned symbol was added
           so that old binaries (i.e., those linked against glibc versions
           earlier than 2.14) employed a memcpy () implementation that safely
           handles the overlapping buffers case (by providing an "older"
           memcpy () implementation that was aliased to memmove(3)).
    
## SEE ALSO         top
    
    
           bcopy(3), bstring(3), memccpy(3), memmove(3), mempcpy(3),
           strcpy(3), strncpy(3), wmemcpy(3)
    
## COLOPHON         top
    
    
           This page is part of release 5.11 of the Linux _man-pages_ project.
           A description of the project, information about reporting bugs,
           and the latest version of this page, can be found at
           https://www.kernel.org/doc/man-pages/.
    
                                   2021-03-22                      MEMCPY(3)
    
