  
# strfmon(3) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | RETURN VALUE | ATTRIBUTES | CONFORMING TO |
EXAMPLES | SEE ALSO | COLOPHON  
  
---  
  
|  
      
    
    STRFMON(3)              Linux Programmer's Manual             STRFMON(3)
    
## NAME         top
    
    
           strfmon, strfmon_l - convert monetary value to a string
    
## SYNOPSIS         top
    
    
           #include <monetary.h>
    
           ssize_t strfmon(char restrict _s_ , size_t _max_ ,
                           const char restrict _format_ , ...);
           ssize_t strfmon_l(char restrict _s_ , size_t _max_ , locale_t _locale_ ,
                           const char restrict _format_ , ...);
    
## DESCRIPTION         top
    
    
           The strfmon () function formats the specified monetary amount
           according to the current locale and format specification _format_
           and places the result in the character array _s_ of size _max_.
    
           The strfmon_l () function performs the same task, but uses the
           locale specified by _locale_.  The behavior of strfmon_l () is
           undefined if _locale_ is the special locale object LC_GLOBAL_LOCALE
           (see duplocale(3)) or is not a valid locale object handle.
    
           Ordinary characters in _format_ are copied to _s_ without conversion.
           Conversion specifiers are introduced by a '%' character.
           Immediately following it there can be zero or more of the
           following flags:
    
           = _f_     The single-byte character _f_ is used as the numeric fill
                  character (to be used with a left precision, see below).
                  When not specified, the space character is used.
    
           ^ Do not use any grouping characters that might be defined
                  for the current locale.  By default, grouping is enabled.
    
           ( or + The ( flag indicates that negative amounts should be
                  enclosed between parentheses.  The + flag indicates that
                  signs should be handled in the default way, that is,
                  amounts are preceded by the locale's sign indication, for
                  example, nothing for positive, "-" for negative.
    
           ! Omit the currency symbol.
    
           - Left justify all fields.  The default is right
                  justification.
    
           Next, there may be a field width: a decimal digit string
           specifying a minimum field width in bytes.  The default is 0.  A
           result smaller than this width is padded with spaces (on the
           left, unless the left-justify flag was given).
    
           Next, there may be a left precision of the form "#" followed by a
           decimal digit string.  If the number of digits left of the radix
           character is smaller than this, the representation is padded on
           the left with the numeric fill character.  Grouping characters
           are not counted in this field width.
    
           Next, there may be a right precision of the form "." followed by
           a decimal digit string.  The amount being formatted is rounded to
           the specified number of digits prior to formatting.  The default
           is specified in the _frac_digits_ and _int_frac_digits_ items of the
           current locale.  If the right precision is 0, no radix character
           is printed.  (The radix character here is determined by
           LC_MONETARY , and may differ from that specified by LC_NUMERIC.)
    
           Finally, the conversion specification must be ended with a
           conversion character.  The three conversion characters are
    
           % (In this case, the entire specification must be exactly
                  "%%".)  Put a '%' character in the result string.
    
           i One argument of type _double_ is converted using the
                  locale's international currency format.
    
           n One argument of type _double_ is converted using the
                  locale's national currency format.
    
## RETURN VALUE         top
    
    
           The strfmon () function returns the number of characters placed in
           the array _s_ , not including the terminating null byte, provided
           the string, including the terminating null byte, fits.
           Otherwise, it sets _errno_ to E2BIG , returns -1, and the contents
           of the array is undefined.
    
## ATTRIBUTES         top
    
    
           For an explanation of the terms used in this section, see
           attributes(7).
    
           ┌───────────────────────────────┬───────────────┬────────────────┐
           │ Interface │ Attribute │ Value │
           ├───────────────────────────────┼───────────────┼────────────────┤
           │ strfmon ()                      │ Thread safety │ MT-Safe locale │
           ├───────────────────────────────┼───────────────┼────────────────┤
           │ strfmon_l ()                    │ Thread safety │ MT-Safe        │
           └───────────────────────────────┴───────────────┴────────────────┘
    
## CONFORMING TO         top
    
    
           POSIX.1-2001, POSIX.1-2008.
    
## EXAMPLES         top
    
    
           The call
    
               strfmon(buf, sizeof(buf), "[%^=#6n] [%=#6i]",
                       1234.567, 1234.567);
    
           outputs
    
               [€ 1234,57] [EUR 1 234,57]
    
           in the _nl_NL_ locale.  The _de_DE_ , _de_CH_ , _en_AU_ , and _en_GB_ locales
           yield
    
               [ 1234,57 €] [ 1.234,57 EUR]
               [ Fr. 1234.57] [ CHF 1'234.57]
               [ $1234.57] [ AUD1,234.57]
               [ £1234.57] [ GBP1,234.57]
    
## SEE ALSO         top
    
    
           duplocale(3), setlocale(3), sprintf(3), locale(7)
    
## COLOPHON         top
    
    
           This page is part of release 5.11 of the Linux _man-pages_ project.
           A description of the project, information about reporting bugs,
           and the latest version of this page, can be found at
           https://www.kernel.org/doc/man-pages/.
    
    Linux                          2021-03-22                     STRFMON(3)
    
