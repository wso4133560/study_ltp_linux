  
# fmod(3) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | RETURN VALUE | ERRORS | ATTRIBUTES |
CONFORMING TO | BUGS | SEE ALSO | COLOPHON  
  
---  
  
|  
      
    
    FMOD(3)                 Linux Programmer's Manual                FMOD(3)
    
## NAME         top
    
    
           fmod, fmodf, fmodl - floating-point remainder function
    
## SYNOPSIS         top
    
    
           #include <math.h>
    
           double fmod(double _x_ , double _y_ );
           float fmodf(float _x_ , float _y_ );
           long double fmodl(long double _x_ , long double _y_ );
    
           Link with _-lm_.
    
       Feature Test Macro Requirements for glibc (see
       feature_test_macros(7)):
    
           fmodf (), fmodl ():
               _ISOC99_SOURCE || _POSIX_C_SOURCE >= 200112L
                   || / Since glibc 2.19: / _DEFAULT_SOURCE
                   || / Glibc <= 2.19: / _BSD_SOURCE || _SVID_SOURCE
    
## DESCRIPTION         top
    
    
           These functions compute the floating-point remainder of dividing
           _x_ by _y_.  The return value is _x_ - _n_  _y_ , where _n_ is the quotient
           of _x_ / _y_ , rounded toward zero to an integer.
    
## RETURN VALUE         top
    
    
           On success, these functions return the value _x_ - _n_  _y_ , for some
           integer _n_ , such that the returned value has the same sign as _x_
           and a magnitude less than the magnitude of _y_.
    
           If _x_ or _y_ is a NaN, a NaN is returned.
    
           If _x_ is an infinity, a domain error occurs, and a NaN is
           returned.
    
           If _y_ is zero, a domain error occurs, and a NaN is returned.
    
           If _x_ is +0 (-0), and _y_ is not zero, +0 (-0) is returned.
    
## ERRORS         top
    
    
           See math_error(7) for information on how to determine whether an
           error has occurred when calling these functions.
    
           The following errors can occur:
    
           Domain error: _x_ is an infinity
                  _errno_ is set to EDOM (but see BUGS).  An invalid floating-
                  point exception ( FE_INVALID ) is raised.
    
           Domain error: _y_ is zero
                  _errno_ is set to EDOM.  An invalid floating-point exception
                  ( FE_INVALID ) is raised.
    
## ATTRIBUTES         top
    
    
           For an explanation of the terms used in this section, see
           attributes(7).
    
           ┌──────────────────────────────────────┬───────────────┬─────────┐
           │ Interface │ Attribute │ Value │
           ├──────────────────────────────────────┼───────────────┼─────────┤
           │ fmod (), fmodf (), fmodl ()              │ Thread safety │ MT-Safe │
           └──────────────────────────────────────┴───────────────┴─────────┘
    
## CONFORMING TO         top
    
    
           C99, POSIX.1-2001, POSIX.1-2008.
    
           The variant returning _double_ also conforms to SVr4, 4.3BSD, C89.
    
## BUGS         top
    
    
           Before version 2.10, the glibc implementation did not set _errno_
           to EDOM when a domain error occurred for an infinite _x_.
    
## SEE ALSO         top
    
    
           remainder(3)
    
## COLOPHON         top
    
    
           This page is part of release 5.11 of the Linux _man-pages_ project.
           A description of the project, information about reporting bugs,
           and the latest version of this page, can be found at
           https://www.kernel.org/doc/man-pages/.
    
                                   2021-03-22                        FMOD(3)
    
