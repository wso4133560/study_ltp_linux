  
# sigpending(2) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | RETURN VALUE | ERRORS | CONFORMING TO | NOTES
| BUGS | SEE ALSO | COLOPHON  
  
---  
  
|  
      
    
    SIGPENDING(2)           Linux Programmer's Manual          SIGPENDING(2)
    
## NAME         top
    
    
           sigpending, rt_sigpending - examine pending signals
    
## SYNOPSIS         top
    
    
           #include <signal.h>
    
           int sigpending(sigset_t  _set_ );
    
       Feature Test Macro Requirements for glibc (see
       feature_test_macros(7)):
    
           sigpending ():
               _POSIX_C_SOURCE
    
## DESCRIPTION         top
    
    
           sigpending () returns the set of signals that are pending for
           delivery to the calling thread (i.e., the signals which have been
           raised while blocked).  The mask of pending signals is returned
           in _set_.
    
## RETURN VALUE         top
    
    
           sigpending () returns 0 on success.  On failure, -1 is returned
           and _errno_ is set to indicate the error.
    
## ERRORS         top
    
    
           EFAULT _set_ points to memory which is not a valid part of the
                  process address space.
    
## CONFORMING TO         top
    
    
           POSIX.1-2001, POSIX.1-2008.
    
## NOTES         top
    
    
           See sigsetops(3) for details on manipulating signal sets.
    
           If a signal is both blocked and has a disposition of "ignored",
           it is _not_ added to the mask of pending signals when generated.
    
           The set of signals that is pending for a thread is the union of
           the set of signals that is pending for that thread and the set of
           signals that is pending for the process as a whole; see
           signal(7).
    
           A child created via fork(2) initially has an empty pending signal
           set; the pending signal set is preserved across an execve(2).
    
       C library/kernel differences
           The original Linux system call was named sigpending ().  However,
           with the addition of real-time signals in Linux 2.2, the fixed-
           size, 32-bit _sigset_t_ argument supported by that system call was
           no longer fit for purpose.  Consequently, a new system call,
           rt_sigpending (), was added to support an enlarged _sigset_t_ type.
           The new system call takes a second argument, _size_t sigsetsize_ ,
           which specifies the size in bytes of the signal set in _set_.  The
           glibc sigpending () wrapper function hides these details from us,
           transparently calling rt_sigpending () when the kernel provides
           it.
    
## BUGS         top
    
    
           In versions of glibc up to and including 2.2.1, there is a bug in
           the wrapper function for sigpending () which means that
           information about pending real-time signals is not correctly
           returned.
    
## SEE ALSO         top
    
    
           kill(2), sigaction(2), signal(2), sigprocmask(2), sigsuspend(2),
           sigsetops(3), signal(7)
    
## COLOPHON         top
    
    
           This page is part of release 5.11 of the Linux _man-pages_ project.
           A description of the project, information about reporting bugs,
           and the latest version of this page, can be found at
           https://www.kernel.org/doc/man-pages/.
    
    Linux                          2021-03-22                  SIGPENDING(2)
    
