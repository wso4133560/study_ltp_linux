  
# fnmatch(3) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | RETURN VALUE | ATTRIBUTES | CONFORMING TO |
SEE ALSO | COLOPHON  
  
---  
  
|  
      
    
    FNMATCH(3)              Linux Programmer's Manual             FNMATCH(3)
    
## NAME         top
    
    
           fnmatch - match filename or pathname
    
## SYNOPSIS         top
    
    
           #include <fnmatch.h>
    
           int fnmatch(const char  _pattern_ , const char  _string_ , int _flags_ );
    
## DESCRIPTION         top
    
    
           The fnmatch () function checks whether the _string_ argument matches
           the _pattern_ argument, which is a shell wildcard pattern (see
           glob(7)).
    
           The _flags_ argument modifies the behavior; it is the bitwise OR of
           zero or more of the following flags:
    
           FNM_NOESCAPE
                  If this flag is set, treat backslash as an ordinary
                  character, instead of an escape character.
    
           FNM_PATHNAME
                  If this flag is set, match a slash in _string_ only with a
                  slash in _pattern_ and not by an asterisk () or a question
                  mark (?) metacharacter, nor by a bracket expression ([])
                  containing a slash.
    
           FNM_PERIOD
                  If this flag is set, a leading period in _string_ has to be
                  matched exactly by a period in _pattern_.  A period is
                  considered to be leading if it is the first character in
                  _string_ , or if both FNM_PATHNAME is set and the period
                  immediately follows a slash.
    
           FNM_FILE_NAME
                  This is a GNU synonym for FNM_PATHNAME.
    
           FNM_LEADING_DIR
                  If this flag (a GNU extension) is set, the pattern is
                  considered to be matched if it matches an initial segment
                  of _string_ which is followed by a slash.  This flag is
                  mainly for the internal use of glibc and is implemented
                  only in certain cases.
    
           FNM_CASEFOLD
                  If this flag (a GNU extension) is set, the pattern is
                  matched case-insensitively.
    
           FNM_EXTMATCH
                  If this flag (a GNU extension) is set, extended patterns
                  are supported, as introduced by 'ksh' and now supported by
                  other shells.  The extended format is as follows, with
                  _pattern-list_ being a '|' separated list of patterns.
    
           '?( _pattern-list_ )'
                  The pattern matches if zero or one occurrences of any of
                  the patterns in the _pattern-list_ match the input _string_.
    
           '( _pattern-list_ )'
                  The pattern matches if zero or more occurrences of any of
                  the patterns in the _pattern-list_ match the input _string_.
    
           '+( _pattern-list_ )'
                  The pattern matches if one or more occurrences of any of
                  the patterns in the _pattern-list_ match the input _string_.
    
           '@( _pattern-list_ )'
                  The pattern matches if exactly one occurrence of any of
                  the patterns in the _pattern-list_ match the input _string_.
    
           '!( _pattern-list_ )'
                  The pattern matches if the input _string_ cannot be matched
                  with any of the patterns in the _pattern-list_.
    
## RETURN VALUE         top
    
    
           Zero if _string_ matches _pattern_ , FNM_NOMATCH if there is no match
           or another nonzero value if there is an error.
    
## ATTRIBUTES         top
    
    
           For an explanation of the terms used in this section, see
           attributes(7).
    
           ┌───────────────────────────┬───────────────┬────────────────────┐
           │ Interface │ Attribute │ Value │
           ├───────────────────────────┼───────────────┼────────────────────┤
           │ fnmatch ()                  │ Thread safety │ MT-Safe env locale │
           └───────────────────────────┴───────────────┴────────────────────┘
    
## CONFORMING TO         top
    
    
           POSIX.1-2001, POSIX.1-2008, POSIX.2.  The FNM_FILE_NAME ,
           FNM_LEADING_DIR , and FNM_CASEFOLD flags are GNU extensions.
    
## SEE ALSO         top
    
    
           sh (1), glob(3), scandir(3), wordexp(3), glob(7)
    
## COLOPHON         top
    
    
           This page is part of release 5.11 of the Linux _man-pages_ project.
           A description of the project, information about reporting bugs,
           and the latest version of this page, can be found at
           https://www.kernel.org/doc/man-pages/.
    
    GNU                            2021-03-22                     FNMATCH(3)
    
