  
# sem_init(3) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | RETURN VALUE | ERRORS | ATTRIBUTES |
CONFORMING TO | NOTES | EXAMPLES | SEE ALSO | COLOPHON  
  
---  
  
|  
      
    
    SEM_INIT(3)             Linux Programmer's Manual            SEM_INIT(3)
    
## NAME         top
    
    
           sem_init - initialize an unnamed semaphore
    
## SYNOPSIS         top
    
    
           #include <semaphore.h>
    
           int sem_init(sem_t  _sem_ , int _pshared_ , unsigned int _value_ );
    
           Link with _-pthread_.
    
## DESCRIPTION         top
    
    
           sem_init () initializes the unnamed semaphore at the address
           pointed to by _sem_.  The _value_ argument specifies the initial
           value for the semaphore.
    
           The _pshared_ argument indicates whether this semaphore is to be
           shared between the threads of a process, or between processes.
    
           If _pshared_ has the value 0, then the semaphore is shared between
           the threads of a process, and should be located at some address
           that is visible to all threads (e.g., a global variable, or a
           variable allocated dynamically on the heap).
    
           If _pshared_ is nonzero, then the semaphore is shared between
           processes, and should be located in a region of shared memory
           (see shm_open(3), mmap(2), and shmget(2)).  (Since a child
           created by fork(2) inherits its parent's memory mappings, it can
           also access the semaphore.)  Any process that can access the
           shared memory region can operate on the semaphore using
           sem_post(3), sem_wait(3), and so on.
    
           Initializing a semaphore that has already been initialized
           results in undefined behavior.
    
## RETURN VALUE         top
    
    
           sem_init () returns 0 on success; on error, -1 is returned, and
           _errno_ is set to indicate the error.
    
## ERRORS         top
    
    
           EINVAL _value_ exceeds SEM_VALUE_MAX.
    
           ENOSYS _pshared_ is nonzero, but the system does not support
                  process-shared semaphores (see sem_overview(7)).
    
## ATTRIBUTES         top
    
    
           For an explanation of the terms used in this section, see
           attributes(7).
    
           ┌──────────────────────────────────────┬───────────────┬─────────┐
           │ Interface │ Attribute │ Value │
           ├──────────────────────────────────────┼───────────────┼─────────┤
           │ sem_init ()                            │ Thread safety │ MT-Safe │
           └──────────────────────────────────────┴───────────────┴─────────┘
    
## CONFORMING TO         top
    
    
           POSIX.1-2001.
    
## NOTES         top
    
    
           Bizarrely, POSIX.1-2001 does not specify the value that should be
           returned by a successful call to sem_init ().  POSIX.1-2008
           rectifies this, specifying the zero return on success.
    
## EXAMPLES         top
    
    
           See shm_open(3) and sem_wait(3).
    
## SEE ALSO         top
    
    
           sem_destroy(3), sem_post(3), sem_wait(3), sem_overview(7)
    
## COLOPHON         top
    
    
           This page is part of release 5.11 of the Linux _man-pages_ project.
           A description of the project, information about reporting bugs,
           and the latest version of this page, can be found at
           https://www.kernel.org/doc/man-pages/.
    
    Linux                          2021-03-22                    SEM_INIT(3)
    
