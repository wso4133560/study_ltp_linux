  
# io_destroy(2) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | RETURN VALUE | ERRORS | VERSIONS | CONFORMING
TO | NOTES | SEE ALSO | COLOPHON  
  
---  
  
|  
      
    
    IO_DESTROY(2)           Linux Programmer's Manual          IO_DESTROY(2)
    
## NAME         top
    
    
           io_destroy - destroy an asynchronous I/O context
    
## SYNOPSIS         top
    
    
           #include <linux/aio_abi.h>          / Defines needed types /
    
           int io_destroy(aio_context_t _ctx_id_ );
    
           _Note_ : There is no glibc wrapper for this system call; see NOTES.
    
## DESCRIPTION         top
    
    
           _Note_ : this page describes the raw Linux system call interface.
           The wrapper function provided by _libaio_ uses a different type for
           the _ctx_id_ argument.  See NOTES.
    
           The io_destroy () system call will attempt to cancel all
           outstanding asynchronous I/O operations against _ctx_id_ , will
           block on the completion of all operations that could not be
           canceled, and will destroy the _ctx_id_.
    
## RETURN VALUE         top
    
    
           On success, io_destroy () returns 0.  For the failure return, see
           NOTES.
    
## ERRORS         top
    
    
           EFAULT The context pointed to is invalid.
    
           EINVAL The AIO context specified by _ctx_id_ is invalid.
    
           ENOSYS io_destroy () is not implemented on this architecture.
    
## VERSIONS         top
    
    
           The asynchronous I/O system calls first appeared in Linux 2.5.
    
## CONFORMING TO         top
    
    
           io_destroy () is Linux-specific and should not be used in programs
           that are intended to be portable.
    
## NOTES         top
    
    
           Glibc does not provide a wrapper for this system call.  You could
           invoke it using syscall(2).  But instead, you probably want to
           use the io_destroy () wrapper function provided by _libaio_.
    
           Note that the _libaio_ wrapper function uses a different type
           ( _io_context_t_ ) for the _ctx_id_ argument.  Note also that the
           _libaio_ wrapper does not follow the usual C library conventions
           for indicating errors: on error it returns a negated error number
           (the negative of one of the values listed in ERRORS).  If the
           system call is invoked via syscall(2), then the return value
           follows the usual conventions for indicating an error: -1, with
           _errno_ set to a (positive) value that indicates the error.
    
## SEE ALSO         top
    
    
           io_cancel(2), io_getevents(2), io_setup(2), io_submit(2), aio(7)
    
## COLOPHON         top
    
    
           This page is part of release 5.11 of the Linux _man-pages_ project.
           A description of the project, information about reporting bugs,
           and the latest version of this page, can be found at
           https://www.kernel.org/doc/man-pages/.
    
    Linux                          2021-03-22                  IO_DESTROY(2)
    
