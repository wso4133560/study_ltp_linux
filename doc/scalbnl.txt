  
# scalbln(3) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | RETURN VALUE | ERRORS | VERSIONS | ATTRIBUTES
| CONFORMING TO | NOTES | BUGS | SEE ALSO | COLOPHON  
  
---  
  
|  
      
    
    SCALBLN(3)              Linux Programmer's Manual             SCALBLN(3)
    
## NAME         top
    
    
           scalbn, scalbnf, scalbnl, scalbln, scalblnf, scalblnl - multiply
           floating-point number by integral power of radix
    
## SYNOPSIS         top
    
    
           #include <math.h>
    
           double scalbln(double _x_ , long _exp_ );
           float scalblnf(float _x_ , long _exp_ );
           long double scalblnl(long double _x_ , long _exp_ );
    
           double scalbn(double _x_ , int _exp_ );
           float scalbnf(float _x_ , int _exp_ );
           long double scalbnl(long double _x_ , int _exp_ );
    
           Link with _-lm_.
    
       Feature Test Macro Requirements for glibc (see
       feature_test_macros(7)):
    
           scalbln (), scalblnf (), scalblnl ():
               _ISOC99_SOURCE || _POSIX_C_SOURCE >= 200112L
                   || / Since glibc 2.19: / _DEFAULT_SOURCE
    
           scalbn (), scalbnf (), scalbnl ():
               _ISOC99_SOURCE || _POSIX_C_SOURCE >= 200112L
                   || / Since glibc 2.19: / _DEFAULT_SOURCE
                   || / Glibc <= 2.19: / _BSD_SOURCE || _SVID_SOURCE
    
## DESCRIPTION         top
    
    
           These functions multiply their first argument _x_ by FLT_RADIX
           (probably 2) to the power of _exp_ , that is:
    
               x  FLT_RADIX  exp
    
           The definition of FLT_RADIX can be obtained by including
           _< float.h>_.
    
## RETURN VALUE         top
    
    
           On success, these functions return _x_  FLT_RADIX  _exp_.
    
           If _x_ is a NaN, a NaN is returned.
    
           If _x_ is positive infinity (negative infinity), positive infinity
           (negative infinity) is returned.
    
           If _x_ is +0 (-0), +0 (-0) is returned.
    
           If the result overflows, a range error occurs, and the functions
           return HUGE_VAL , HUGE_VALF , or HUGE_VALL , respectively, with a
           sign the same as _x_.
    
           If the result underflows, a range error occurs, and the functions
           return zero, with a sign the same as _x_.
    
## ERRORS         top
    
    
           See math_error(7) for information on how to determine whether an
           error has occurred when calling these functions.
    
           The following errors can occur:
    
           Range error, overflow
                  An overflow floating-point exception ( FE_OVERFLOW ) is
                  raised.
    
           Range error, underflow
                  _errno_ is set to ERANGE.  An underflow floating-point
                  exception ( FE_UNDERFLOW ) is raised.
    
## VERSIONS         top
    
    
           These functions first appeared in glibc in version 2.1.
    
## ATTRIBUTES         top
    
    
           For an explanation of the terms used in this section, see
           attributes(7).
    
           ┌──────────────────────────────────────┬───────────────┬─────────┐
           │ Interface │ Attribute │ Value │
           ├──────────────────────────────────────┼───────────────┼─────────┤
           │ scalbn (), scalbnf (), scalbnl (),       │ Thread safety │ MT-Safe │
           │ scalbln (), scalblnf (), scalblnl ()     │               │         │
           └──────────────────────────────────────┴───────────────┴─────────┘
    
## CONFORMING TO         top
    
    
           C99, POSIX.1-2001, POSIX.1-2008.
    
## NOTES         top
    
    
           These functions differ from the obsolete functions described in
           scalb(3) in the type of their second argument.  The functions
           described on this page have a second argument of an integral
           type, while those in scalb(3) have a second argument of type
           _double_.
    
           If FLT_RADIX equals 2 (which is usual), then scalbn () is
           equivalent to ldexp(3).
    
## BUGS         top
    
    
           Before glibc 2.20, these functions did not set _errno_ for range
           errors.
    
## SEE ALSO         top
    
    
           ldexp(3), scalb(3)
    
## COLOPHON         top
    
    
           This page is part of release 5.11 of the Linux _man-pages_ project.
           A description of the project, information about reporting bugs,
           and the latest version of this page, can be found at
           https://www.kernel.org/doc/man-pages/.
    
                                   2021-03-22                     SCALBLN(3)
    
