  
# wcstok(3) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | RETURN VALUE | ATTRIBUTES | CONFORMING TO |
NOTES | EXAMPLES | SEE ALSO | COLOPHON  
  
---  
  
|  
      
    
    WCSTOK(3)               Linux Programmer's Manual              WCSTOK(3)
    
## NAME         top
    
    
           wcstok - split wide-character string into tokens
    
## SYNOPSIS         top
    
    
           #include <wchar.h>
    
           wchar_t wcstok(wchar_t restrict _wcs_ , const wchar_t restrict _delim_ ,
                           wchar_t restrict _ptr_ );
    
## DESCRIPTION         top
    
    
           The wcstok () function is the wide-character equivalent of the
           strtok(3) function, with an added argument to make it
           multithread-safe.  It can be used to split a wide-character
           string _wcs_ into tokens, where a token is defined as a substring
           not containing any wide-characters from _delim_.
    
           The search starts at _wcs_ , if _wcs_ is not NULL, or at _ptr_ , if _wcs_
           is NULL.  First, any delimiter wide-characters are skipped, that
           is, the pointer is advanced beyond any wide-characters which
           occur in _delim_.  If the end of the wide-character string is now
           reached, wcstok () returns NULL, to indicate that no tokens were
           found, and stores an appropriate value in _ptr_ , so that
           subsequent calls to wcstok () will continue to return NULL.
           Otherwise, the wcstok () function recognizes the beginning of a
           token and returns a pointer to it, but before doing that, it
           zero-terminates the token by replacing the next wide-character
           which occurs in _delim_ with a null wide character (L'\0'), and it
           updates _ptr_ so that subsequent calls will continue searching
           after the end of recognized token.
    
## RETURN VALUE         top
    
    
           The wcstok () function returns a pointer to the next token, or
           NULL if no further token was found.
    
## ATTRIBUTES         top
    
    
           For an explanation of the terms used in this section, see
           attributes(7).
    
           ┌──────────────────────────────────────┬───────────────┬─────────┐
           │ Interface │ Attribute │ Value │
           ├──────────────────────────────────────┼───────────────┼─────────┤
           │ wcstok ()                              │ Thread safety │ MT-Safe │
           └──────────────────────────────────────┴───────────────┴─────────┘
    
## CONFORMING TO         top
    
    
           POSIX.1-2001, POSIX.1-2008, C99.
    
## NOTES         top
    
    
           The original _wcs_ wide-character string is destructively modified
           during the operation.
    
## EXAMPLES         top
    
    
           The following code loops over the tokens contained in a wide-
           character string.
    
           wchar_t wcs = ...;
           wchar_t token;
           wchar_t state;
           for (token = wcstok(wcs, " \t\n", &state);
               token != NULL;
               token = wcstok(NULL, " \t\n", &state)) {
               ...
           }
    
## SEE ALSO         top
    
    
           strtok(3), wcschr(3)
    
## COLOPHON         top
    
    
           This page is part of release 5.11 of the Linux _man-pages_ project.
           A description of the project, information about reporting bugs,
           and the latest version of this page, can be found at
           https://www.kernel.org/doc/man-pages/.
    
    GNU                            2021-03-22                      WCSTOK(3)
    
