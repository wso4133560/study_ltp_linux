  
# s390_runtime_instr(2) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | RETURN VALUE | ERRORS | VERSIONS | CONFORMING
TO | NOTES | SEE ALSO | COLOPHON  
  
---  
  
|  
      
    
    S390_RUNTIME_INSTR(2)      System Calls Manual     S390_RUNTIME_INSTR(2)
    
## NAME         top
    
    
           s390_runtime_instr - enable/disable s390 CPU run-time
           instrumentation
    
## SYNOPSIS         top
    
    
           #include <asm/runtime_instr.h>
    
           int s390_runtime_instr(int _command_ , int _signum_ );
    
           _Note_ : There is no glibc wrapper for this system call; see NOTES.
    
## DESCRIPTION         top
    
    
           The s390_runtime_instr () system call starts or stops CPU run-time
           instrumentation for the calling thread.
    
           The _command_ argument controls whether run-time instrumentation is
           started ( S390_RUNTIME_INSTR_START , 1) or stopped
           ( S390_RUNTIME_INSTR_STOP , 2) for the calling thread.
    
           The _signum_ argument specifies the number of a real-time signal.
           This argument was used to specify a signal number that should be
           delivered to the thread if the run-time instrumentation buffer
           was full or if the run-time-instrumentation-halted interrupt had
           occurred.  This feature was never used, and in Linux 4.4 support
           for this feature was removed; thus, in current kernels, this
           argument is ignored.
    
## RETURN VALUE         top
    
    
           On success, s390_runtime_instr () returns 0 and enables the thread
           for run-time instrumentation by assigning the thread a default
           run-time instrumentation control block.  The caller can then read
           and modify the control block and start the run-time
           instrumentation.  On error, -1 is returned and _errno_ is set to
           indicate the error.
    
## ERRORS         top
    
    
           EINVAL The value specified in _command_ is not a valid command.
    
           EINVAL The value specified in _signum_ is not a real-time signal
                  number.  From Linux 4.4 onwards, the _signum_ argument has
                  no effect, so that an invalid signal number will not
                  result in an error.
    
           ENOMEM Allocating memory for the run-time instrumentation control
                  block failed.
    
           EOPNOTSUPP
                  The run-time instrumentation facility is not available.
    
## VERSIONS         top
    
    
           This system call is available since Linux 3.7.
    
## CONFORMING TO         top
    
    
           This Linux-specific system call is available only on the s390
           architecture.  The run-time instrumentation facility is available
           beginning with System z EC12.
    
## NOTES         top
    
    
           Glibc does not provide a wrapper for this system call; call it
           using syscall(2)
    
           The _asm/runtime_instr.h_ header file is available since Linux
           4.16.
    
           Starting with Linux 4.4, support for signalling was removed, as
           was the check whether _signum_ is a valid real-time signal.  For
           backwards compatibility with older kernels, it is recommended to
           pass a valid real-time signal number in _signum_ and install a
           handler for that signal.
    
## SEE ALSO         top
    
    
           syscall(2), signal(7)
    
## COLOPHON         top
    
    
           This page is part of release 5.11 of the Linux _man-pages_ project.
           A description of the project, information about reporting bugs,
           and the latest version of this page, can be found at
           https://www.kernel.org/doc/man-pages/.
    
    Linux Programmer's Manual      2021-03-22          S390_RUNTIME_INSTR(2)
    
