  
# tzset(3) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | ENVIRONMENT | FILES | ATTRIBUTES | CONFORMING
TO | NOTES | SEE ALSO | COLOPHON  
  
---  
  
|  
      
    
    TZSET(3)                Linux Programmer's Manual               TZSET(3)
    
## NAME         top
    
    
           tzset, tzname, timezone, daylight - initialize time conversion
           information
    
## SYNOPSIS         top
    
    
           #include <time.h>
    
           void tzset (void);
    
           extern char  _tzname_ [2];
           extern long _timezone_ ;
           extern int _daylight_ ;
    
       Feature Test Macro Requirements for glibc (see
       feature_test_macros(7)):
    
           tzset ():
               _POSIX_C_SOURCE
    
           _tzname_ :
               _POSIX_C_SOURCE
    
           _timezone_ , _daylight_ :
               _XOPEN_SOURCE
                   || / Glibc since 2.19: / _DEFAULT_SOURCE
                   || / Glibc <= 2.19: / _SVID_SOURCE
    
## DESCRIPTION         top
    
    
           The tzset () function initializes the _tzname_ variable from the TZ
           environment variable.  This function is automatically called by
           the other time conversion functions that depend on the timezone.
           In a System-V-like environment, it will also set the variables
           _timezone_ (seconds West of UTC) and _daylight_ (to 0 if this
           timezone does not have any daylight saving time rules, or to
           nonzero if there is a time, past, present, or future when
           daylight saving time applies).
    
           If the TZ variable does not appear in the environment, the system
           timezone is used.  The system timezone is configured by copying,
           or linking, a file in the tzfile(5) format to _/etc/localtime_.  A
           timezone database of these files may be located in the system
           timezone directory (see the FILES section below).
    
           If the TZ variable does appear in the environment, but its value
           is empty, or its value cannot be interpreted using any of the
           formats specified below, then Coordinated Universal Time (UTC) is
           used.
    
           The value of TZ can be one of two formats.  The first format is a
           string of characters that directly represent the timezone to be
           used:
    
               _std offset_ [ _dst_ [ _offset_ ][, _start_ [ _/time_ ], _end_ [ _/time_ ]]]
    
           There are no spaces in the specification.  The _std_ string
           specifies an abbreviation for the timezone and must be three or
           more alphabetic characters.  When enclosed between the less-than
           (<) and greater-than (>) signs, the characters set is expanded to
           include the plus (+) sign, the minus (-) sign, and digits.  The
           _offset_ string immediately follows _std_ and specifies the time
           value to be added to the local time to get Coordinated Universal
           Time (UTC).  The _offset_ is positive if the local timezone is west
           of the Prime Meridian and negative if it is east.  The hour must
           be between 0 and 24, and the minutes and seconds 00 and 59:
    
               [ _+_ | _-_ ] _hh_ [ _:mm_ [ _:ss_ ]]
    
           The _dst_ string and _offset_ specify the name and offset for the
           corresponding daylight saving timezone.  If the offset is
           omitted, it defaults to one hour ahead of standard time.
    
           The _start_ field specifies when daylight saving time goes into
           effect and the _end_ field specifies when the change is made back
           to standard time.  These fields may have the following formats:
    
           J _n_     This specifies the Julian day with _n_ between 1 and 365.
                  Leap days are not counted.  In this format, February 29
                  can't be represented; February 28 is day 59, and March 1
                  is always day 60.
    
           _n_      This specifies the zero-based Julian day with _n_ between 0
                  and 365.  February 29 is counted in leap years.
    
           M _m_. _w_. _d_ This specifies day _d_ (0 <= _d_ <= 6) of week _w_ (1 <= _w_ <= 5)
                  of month _m_ (1 <= _m_ <= 12).  Week 1 is the first week in
                  which day _d_ occurs and week 5 is the last week in which
                  day _d_ occurs.  Day 0 is a Sunday.
    
           The _time_ fields specify when, in the local time currently in
           effect, the change to the other time occurs.  If omitted, the
           default is 02:00:00.
    
           Here is an example for New Zealand, where the standard time
           (NZST) is 12 hours ahead of UTC, and daylight saving time (NZDT),
           13 hours ahead of UTC, runs from the first Sunday in October to
           the third Sunday in March, and the changeovers happen at the
           default time of 02:00:00:
    
               TZ="NZST-12:00:00NZDT-13:00:00,M10.1.0,M3.3.0"
    
           The second format specifies that the timezone information should
           be read from a file:
    
               :[filespec]
    
           If the file specification _filespec_ is omitted, or its value
           cannot be interpreted, then Coordinated Universal Time (UTC) is
           used.  If _filespec_ is given, it specifies another
           tzfile(5)-format file to read the timezone information from.  If
           _filespec_ does not begin with a '/', the file specification is
           relative to the system timezone directory.  If the colon is
           omitted each of the above TZ formats will be tried.
    
           Here's an example, once more for New Zealand:
    
               TZ=":Pacific/Auckland"
    
## ENVIRONMENT         top
    
    
           TZ If this variable is set its value takes precedence over
                  the system configured timezone.
    
           TZDIR If this variable is set its value takes precedence over
                  the system configured timezone database directory path.
    
## FILES         top
    
    
           _/etc/localtime_
                  The system timezone file.
    
           _/usr/share/zoneinfo/_
                  The system timezone database directory.
    
           _/usr/share/zoneinfo/posixrules_
                  When a TZ string includes a dst timezone without anything
                  following it, then this file is used for the start/end
                  rules.  It is in the tzfile(5) format.  By default, the
                  zoneinfo Makefile hard links it to the _America/New_York_
                  tzfile.
    
           Above are the current standard file locations, but they are
           configurable when glibc is compiled.
    
## ATTRIBUTES         top
    
    
           For an explanation of the terms used in this section, see
           attributes(7).
    
           ┌───────────────────────────┬───────────────┬────────────────────┐
           │ Interface │ Attribute │ Value │
           ├───────────────────────────┼───────────────┼────────────────────┤
           │ tzset ()                    │ Thread safety │ MT-Safe env locale │
           └───────────────────────────┴───────────────┴────────────────────┘
    
## CONFORMING TO         top
    
    
           POSIX.1-2001, POSIX.1-2008, SVr4, 4.3BSD.
    
## NOTES         top
    
    
           4.3BSD had a function char timezone( _zone_ , _dst_ ) that returned the
           name of the timezone corresponding to its first argument (minutes
           West of UTC).  If the second argument was 0, the standard name
           was used, otherwise the daylight saving time version.
    
## SEE ALSO         top
    
    
           date(1), gettimeofday(2), time(2), ctime(3), getenv(3), tzfile(5)
    
## COLOPHON         top
    
    
           This page is part of release 5.11 of the Linux _man-pages_ project.
           A description of the project, information about reporting bugs,
           and the latest version of this page, can be found at
           https://www.kernel.org/doc/man-pages/.
    
                                   2021-03-22                       TZSET(3)
    
