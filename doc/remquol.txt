  
# remquo(3) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | RETURN VALUE | ERRORS | VERSIONS | ATTRIBUTES
| CONFORMING TO | SEE ALSO | COLOPHON  
  
---  
  
|  
      
    
    REMQUO(3)               Linux Programmer's Manual              REMQUO(3)
    
## NAME         top
    
    
           remquo, remquof, remquol - remainder and part of quotient
    
## SYNOPSIS         top
    
    
           #include <math.h>
    
           double remquo(double _x_ , double _y_ , int  _quo_ );
           float remquof(float _x_ , float _y_ , int  _quo_ );
           long double remquol(long double _x_ , long double _y_ , int  _quo_ );
    
           Link with _-lm_.
    
       Feature Test Macro Requirements for glibc (see
       feature_test_macros(7)):
    
           remquo (), remquof (), remquol ():
               _ISOC99_SOURCE || _POSIX_C_SOURCE >= 200112L
    
## DESCRIPTION         top
    
    
           These functions compute the remainder and part of the quotient
           upon division of _x_ by _y_.  A few bits of the quotient are stored
           via the _quo_ pointer.  The remainder is returned as the function
           result.
    
           The value of the remainder is the same as that computed by the
           remainder(3) function.
    
           The value stored via the _quo_ pointer has the sign of _x / y_ and
           agrees with the quotient in at least the low order 3 bits.
    
           For example, _remquo(29.0, 3.0)_ returns -1.0 and might store 2.
           Note that the actual quotient might not fit in an integer.
    
## RETURN VALUE         top
    
    
           On success, these functions return the same value as the
           analogous functions described in remainder(3).
    
           If _x_ or _y_ is a NaN, a NaN is returned.
    
           If _x_ is an infinity, and _y_ is not a NaN, a domain error occurs,
           and a NaN is returned.
    
           If _y_ is zero, and _x_ is not a NaN, a domain error occurs, and a
           NaN is returned.
    
## ERRORS         top
    
    
           See math_error(7) for information on how to determine whether an
           error has occurred when calling these functions.
    
           The following errors can occur:
    
           Domain error: _x_ is an infinity or _y_ is 0, and the other argument
           is not a NaN
                  An invalid floating-point exception ( FE_INVALID ) is
                  raised.
    
           These functions do not set _errno_.
    
## VERSIONS         top
    
    
           These functions first appeared in glibc in version 2.1.
    
## ATTRIBUTES         top
    
    
           For an explanation of the terms used in this section, see
           attributes(7).
    
           ┌──────────────────────────────────────┬───────────────┬─────────┐
           │ Interface │ Attribute │ Value │
           ├──────────────────────────────────────┼───────────────┼─────────┤
           │ remquo (), remquof (), remquol ()        │ Thread safety │ MT-Safe │
           └──────────────────────────────────────┴───────────────┴─────────┘
    
## CONFORMING TO         top
    
    
           C99, POSIX.1-2001, POSIX.1-2008.
    
## SEE ALSO         top
    
    
           fmod(3), logb(3), remainder(3)
    
## COLOPHON         top
    
    
           This page is part of release 5.11 of the Linux _man-pages_ project.
           A description of the project, information about reporting bugs,
           and the latest version of this page, can be found at
           https://www.kernel.org/doc/man-pages/.
    
    GNU                            2021-03-22                      REMQUO(3)
    
